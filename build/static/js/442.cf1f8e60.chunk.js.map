{"version":3,"file":"static/js/442.cf1f8e60.chunk.js","mappings":"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","sources":["api/api.js","views/ui/BrokersList.js"],"sourcesContent":["// import { Alert, I18nManager } from \"react-native\";\r\n// import all strings we need, Translation have all messages and lables in several languages ((MOHAJ))\r\n// import Strings from '../Translation';\r\n// import Local storage\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n//START To chick language ((MOHAJ))\r\n// var IS_RTL = I18nManager.isRTL;\r\n// if (IS_RTL) {\r\n//     var strings = Strings.ar\r\n// } else {\r\n//     var strings = Strings.enUS\r\n// }\r\n//END To chick language ((MOHAJ))\r\n\r\n// START HTTP call  \r\nconst callAsyncAPI = async (domain, data, returnedValue = '') => {\r\n    try {\r\n        let response = await fetch(domain, data);\r\n        let res = await response.json();\r\n\r\n        console.log('RESPONSE RES', res)\r\n        //console.log('RESPONSE ALL', res)\r\n        if (response.status == 404) {\r\n            //not found ((MOHAJ))\r\n            console.log('404', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status == 401) {\r\n            //authentication Error ((MOHAJ))\r\n            console.log('401', response, domain, data);\r\n\r\n            return res;\r\n        } else if (response.status == 500) {\r\n            //internal server error ((MOHAJ))\r\n            console.log('500', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status >= 200 && response.status < 300) {\r\n            //success\r\n            return returnedValue ? res[`${returnedValue}`] : res;\r\n        } else if (response.status == 405 || response.status == 400) {\r\n            //405 => request refused \r\n            //400 => bad request\r\n            console.log('405 || 400', response, domain, data);\r\n\r\n            return false;\r\n        } else {\r\n            //internet error\r\n            console.log('internet', response, domain, data);\r\n\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        //data error\r\n        console.log('data error', error, domain, data);\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\n//START headers && body Processing To send api FUNC MOHAJ\r\nconst callApi = (domain, data, headerToken, methodName = 'POST', files = false) => {\r\n    var configApi = {};\r\n    configApi['method'] = methodName;\r\n    if (methodName != 'GET') {\r\n        configApi['body'] = files ? data : JSON.stringify(data);\r\n    } else {\r\n        domain += '?';\r\n        for (const key in data) {\r\n            domain += key + '=' + data[key] + '&';\r\n        }\r\n    }\r\n    if (methodName != 'GET') {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    } else {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken\r\n        }\r\n    }\r\n    let resData = callAsyncAPI(domain, configApi);\r\n    return resData;\r\n};\r\n//END headers && body Processing To send api FUNC MOHAJ\r\n\r\n\r\n// START To chick isLohin OR token found MOHAJ\r\nconst checkLoginData = async () => {\r\n    // let token = await AsyncStorage.getItem('token');\r\n    // let loginData = {};\r\n    // if (loginMethod == 'email') {\r\n    //     let email = await AsyncStorage.getItem('email');\r\n    //     let password = await AsyncStorage.getItem('password');\r\n    //     loginData = {\r\n    //         username: email,\r\n    //         password: password,\r\n    //     }\r\n    // }\r\n    var resData = await 'token';\r\n    return resData;\r\n}\r\n// END To chick isLohin OR token found MOHAJ\r\n\r\n//START Data Processing WITH Token MOHAJ\r\nconst callApiWithToken = async (domain, data, methodName = 'POST', files = 'aaaaa') => {\r\n    let token = files\r\n    let resData = false;\r\n    if (token != false && token != undefined && token != '' && token != null)\r\n        resData = await callApi(domain, data, token, methodName, false);\r\n    return resData;\r\n};\r\n//END Data Processing WITH Token MOHAJ\r\n\r\nexport { callApi, callApiWithToken };\r\n\r\n\r\n\r\n// How I can use this platform ?\r\n// ok if your metohd is \"GIT\" you can call api like that\r\n\r\n// var data = await callApiWithToken(config.DOMAIN, { Page: 1, ItemsPerPage: 100 }, 'GET');\r\n// just you need sent domain and data and method Type and you can set DOMAIN static in callAsyncAPI Function\r\n\r\n\r\n// and about \"POST\" method you can call like that\r\n// let ApiData = {\r\n//     'name': 'MoahmmedHajeer',\r\n//     'password': 'Eska@123',\r\n// };\r\n// var data = await callApiWithToken(config.DOMAIN, ApiData);\r\n\r\n// Author : Mohammed Hajeer // Wireless ESKADENIA ","\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Input, Alert, Container, Card, CardBody, CardTitle, FormFeedback } from 'reactstrap';\r\n// import { Card, CardBody, CardTitle, Container, FormFeedback, Spinner } from \"reactstrap\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Close';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport {\r\n  GridRowModes,\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridActionsCellItem,\r\n  GridRowEditStopReasons,\r\n} from '@mui/x-data-grid';\r\nimport { callApiWithToken } from '../../api/api';\r\n\r\n\r\nconst initialFormAccountType = {\r\n  account_type: '',\r\n  account_type_minimum_trading_size: '',\r\n  account_type_maximum_trading_size: '',\r\n  broker_id: 0,\r\n}\r\nconst initialEditForm = {\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst initialFormDataWithData = {\r\n  name: 'TEST ADD BROKER',\r\n  email: 'testadd@pais4x.net',\r\n  description: 'Welcome to ESCO...',\r\n  cashback: '93',\r\n  account_currency: 'USD / EUR',\r\n  currency: 'dollar',\r\n  title: 'sndkvjcsndvjk',\r\n  entity_name: 'jkvb hsbvjk',\r\n  broker_type: 'keajnrkvjb ejk',\r\n  branch_offices: 'kajbrhjvkebhjvebr',\r\n  headquarters: 'renkjve',\r\n  bonus: 'test test ',\r\n  islamic_accounts: 'test test ',\r\n  trailing_stop: 'test test ',\r\n  hedging: 'test test ',\r\n  scalping: 'test test ',\r\n  ea: 'test test ',\r\n  segregated_accounts: 'test test ',\r\n  number_of_instruments: '300',\r\n  categories_of_instruments: 'test test ',\r\n  channels: 'https://chat.conv.rs/...',\r\n  hours: 'From 8:00 to 17:00 CET Time',\r\n  languages: 'English 50+ Other',\r\n  pc_platforms: 'Browser Trader, FXC Trader App',\r\n  mobile_platforms: 'FXC Trader Android / iOS',\r\n  demo_period: 'No Expiration on Demo Account',\r\n  MAM_PAMM: 'Yes',\r\n  leverage_levels: '1:1000 (possible to lower in client potal)',\r\n  margin_call_evel: '50',\r\n  stop_out_level: '30',\r\n  closing_method_stop_out: 'Margin : one by one Floating: all at once',\r\n  avg_spread_on_EURUSD_val_1: '20',\r\n  avg_spread_on_EURUSD_val_2: '30',\r\n  avg_spread_on_EURUSD_val_3: '40',\r\n  commissions_on_FX_val_1: '0',\r\n  commissions_on_FX_val_2: '0',\r\n  commissions_on_FX_val_3: '0',\r\n  FX_margin_bonus: '0,01 LOT',\r\n  FX_scalping_account: '0,01 LOT',\r\n  FX_floating_bonus: '0,01 LOT',\r\n  metals_margin_bonus: 'Not Max',\r\n  metals_floating_bonus: 'Not Max',\r\n  metals_scalping_account: 'Not Max',\r\n  energies_margin_bonus: 'Not Max',\r\n  energies_floating_bonus: 'Not Max',\r\n  energies_scalping_account: 'Not Max',\r\n  indicies_margin_bonus: 'Not Max',\r\n  indicies_scalping_account: 'Not Max',\r\n  indicies_floating_bonus: 'Not Max',\r\n  stocks_margin_bonus: 'Not Max',\r\n  stocks_floating_bonus: 'Not Max',\r\n  stocks_scalping_account: 'Not Max',\r\n  minimum_deposit_val1: '10',\r\n  minimum_deposit_val2: '10',\r\n  minimum_deposit_val3: '1000',\r\n  payment_methods: 'All Local Deposit Types, Crypto, Wire Transfer, Match2Pay, AstroPay etc',\r\n  youtube_link: 'ojugilkfdsisjglkfdjglk',\r\n  whatsapp_link: 'LINK FOR whatsapp_l',\r\n  twitter_link: 'LINK FOR twitter_link',\r\n  instagram_link: 'LINK FOR instagram_link',\r\n  facebook_link: 'LINK FOR facebook_link',\r\n};\r\n\r\nconst initialFormData = {\r\n  name: '',\r\n  email: '',\r\n  description: '',\r\n  cashback: '',\r\n  account_currency: '',\r\n  currency: '',\r\n  title: '',\r\n  entity_name: '',\r\n  broker_type: '',\r\n  branch_offices: '',\r\n  headquarters: '',\r\n  bonus: '',\r\n  islamic_accounts: '',\r\n  trailing_stop: '',\r\n  hedging: '',\r\n  scalping: '',\r\n  ea: '',\r\n  segregated_accounts: '',\r\n  number_of_instruments: '',\r\n  categories_of_instruments: '',\r\n  channels: '',\r\n  hours: '',\r\n  languages: '',\r\n  pc_platforms: '',\r\n  mobile_platforms: '',\r\n  demo_period: '',\r\n  MAM_PAMM: '',\r\n  leverage_levels: '',\r\n  margin_call_evel: '',\r\n  stop_out_level: '',\r\n  closing_method_stop_out: '',\r\n  avg_spread_on_EURUSD_val_1: '',\r\n  avg_spread_on_EURUSD_val_2: '',\r\n  avg_spread_on_EURUSD_val_3: '',\r\n  commissions_on_FX_val_1: '',\r\n  commissions_on_FX_val_2: '',\r\n  commissions_on_FX_val_3: '',\r\n  FX_margin_bonus: '',\r\n  FX_scalping_account: '',\r\n  FX_floating_bonus: '',\r\n  metals_margin_bonus: '',\r\n  metals_floating_bonus: '',\r\n  metals_scalping_account: '',\r\n  energies_margin_bonus: '',\r\n  energies_floating_bonus: '',\r\n  energies_scalping_account: '',\r\n  indicies_margin_bonus: '',\r\n  indicies_scalping_account: '',\r\n  indicies_floating_bonus: '',\r\n  stocks_margin_bonus: '',\r\n  stocks_floating_bonus: '',\r\n  stocks_scalping_account: '',\r\n  minimum_deposit_val1: '',\r\n  minimum_deposit_val2: '',\r\n  minimum_deposit_val3: '',\r\n  payment_methods: '',\r\n  youtube_link: '',\r\n  facebook: '',\r\n  instagram: '',\r\n  linkden: '',\r\n};\r\n\r\nconst currencyOptions = [\r\n  { value: 'dollar', label: 'Dollar' },\r\n  { value: 'jd', label: 'JD' },\r\n  { value: 'p', label: 'P' },\r\n];\r\n\r\nconst BrokersList = () => {\r\n  const [viewMode, setViewMode] = useState(true);\r\n  const [rows, setRows] = useState([]);\r\n  const [rowModesModel, setRowModesModel] = useState({});\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [formData, setFormData] = useState(initialFormDataWithData);\r\n  const [editForm, setEditForm] = useState({});\r\n  const [file, setFile] = useState(null);\r\n  const [logoFile, setLogoFile] = useState(null);\r\n  const [modeIs, setModeIs] = useState(0);\r\n  const [imagePreview, setImagePreview] = useState(\"https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1\"); // Path to your default image\r\n  const [logoPreview, setLogoPreview] = useState(\"https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1\"); // Path to your default image\r\n  const [errorsAccountType, setErrorsAccountType] = useState({});\r\n  const [loadingAccountType, setLoadingAccountType] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n  \r\n  const [addError, setAddError] = useState('')\r\n  const [responseCash, setresponseCash] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [textSearch, setTextSearch] = useState('')\r\n\r\n  //form\r\n  const imageUrl = 'https://lab.app2serve.com/storage/app/public/'\r\n\r\n\r\n\r\n  const [accountType, setAccountType] = useState(initialFormAccountType);\r\n\r\n  useEffect(() => {\r\n    setModeIs(0);\r\n    getBrokers();\r\n  }, []);\r\n\r\n  const getBrokers = async () => {\r\n    const response = await callApiWithToken('https://lab.app2serve.com/public/api/brokers', {}, 'GET');\r\n    const brokersWid = response.brokers.map((obj, index) => ({ ...obj, id: index + 1 }));\r\n    setRows(brokersWid);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n\r\n    const { name, value } = e.target;\r\n    console.log('name is:', name);\r\n    console.log('value is:', value);\r\n\r\n    setEditForm(prevState => ({ ...prevState, [name]: value }));\r\n    setFormData(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleCurrencyChange = (e) => {\r\n    const { value } = e.target;\r\n    setFormData(prevState => ({ ...prevState, currency: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (modeIs == 1) {\r\n      setAddError('')\r\n      addItem(e)\r\n    } else {\r\n      editItem(e)\r\n    }\r\n  };\r\n\r\n\r\n  function EditToolbar(props) {\r\n    const { setRows, setRowModesModel } = props;\r\n\r\n    const handleClick = () => {\r\n      const id = 2;\r\n      setRows((oldRows) => [...oldRows, { id, name: '', email: '', isNew: true }]);\r\n      setRowModesModel((oldModel) => ({\r\n        ...oldModel,\r\n        [id]: { mode: GridRowModes.Edit, fieldToFocus: 'name' },\r\n      }));\r\n    };\r\n\r\n    return (\r\n      <GridToolbarContainer>\r\n        <Button style={{ backgroundColor: '#26c6da', color: '#ffffff' }} startIcon={<AddIcon />} onClick={() => addBroker()}>\r\n          Add Broker\r\n        </Button>\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n\r\n  const addBroker = () => {\r\n    setModeIs(1)\r\n    setImagePreview('https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1')\r\n    setLogoPreview('https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1')\r\n    // setFormData(initialFormData);\r\n    setViewMode(false)\r\n  };\r\n  const handleRowEditStop = (params, event) => {\r\n    if (params.reason === GridRowEditStopReasons.rowFocusOut) {\r\n      event.defaultMuiPrevented = true;\r\n    }\r\n  };\r\n\r\n  const getObjectById = (id) => {\r\n    return rows.find(obj => obj.id === id);\r\n  };\r\n\r\n  const handleEditClick = (id) => () => {\r\n    const item = getObjectById(id);\r\n\r\n    setModeIs(2)\r\n    setAccountType({\r\n      account_type: '',\r\n      account_type_minimum_trading_size: '',\r\n      account_type_maximum_trading_size: '',\r\n      broker_id: item.broker_id\r\n    });\r\n    setViewMode(false)\r\n    setFormData({ ...item });\r\n    var logo = imageUrl + item.logo\r\n    var image = imageUrl + item.image\r\n    if (logo != 'https://lab.app2serve.com/storage/app/public/') {\r\n      setImagePreview(logo)\r\n    } else {\r\n      setImagePreview('https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1')\r\n    }\r\n\r\n    if (image != 'https://lab.app2serve.com/storage/app/public/') {\r\n      setLogoPreview(image)\r\n    } else {\r\n      setLogoPreview('https://i0.wp.com/maidcleantx.com/wp-content/uploads/2017/10/logo.png?ssl=1')\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = (id) => () => {\r\n\r\n  };\r\n\r\n\r\n  const handleCancelClick = (id) => () => {\r\n    // setRowModesModel({\r\n    //   ...rowModesModel,\r\n    //   [id]: { mode: GridRowModes.View, ignoreModifications: true },\r\n    // });\r\n\r\n    // const editedRow = rows.find((row) => row.id === id);\r\n    // if (editedRow.isNew) {\r\n    //   setRows(rows.filter((row) => row.id !== id));\r\n    // }\r\n  };\r\n\r\n  const processRowUpdate = (newRow) => {\r\n    // const updatedRow = { ...newRow, isNew: false };\r\n    // setRows(rows.map((row) => (row.id === newRow.id ? updatedRow : row)));\r\n    // return updatedRow;\r\n  };\r\n\r\n\r\n\r\n  const handleDeleteClick = (id) => () => {\r\n\r\n    const item = getObjectById(id);\r\n    console.log('ooooooooooooooooooo', item);\r\n    console.log('ITEM IS================>>>', item);\r\n\r\n    const isConfirmed = window.confirm(\"Are you sure you want to delete this item?\");\r\n\r\n    if (isConfirmed) {\r\n      deleteItem(item.broker_id)\r\n      // Call your delete function here\r\n      console.log(\"Item deleted\");\r\n    } else {\r\n      console.log(\"Item not deleted\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    console.log('SSSSSSSSSSSSS', id);\r\n\r\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjg2MDllNzQ0OTgxZjMwNzIyZTllNmRlMDQyMjY2MDJmNDM0NTk3ODBlNzUzM2FiNDc3MGFhMjhiZDFjZjRhMjU5NGNhYjI3MGJhM2UxNzUiLCJpYXQiOjE3MTc2MjA2NDQsIm5iZiI6MTcxNzYyMDY0NCwiZXhwIjoxNzQ5MTU2NjQ0LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.cRRWjwpsvG5cYb-5n_YpfrOHfoWzRTEoYndZffA08MrJxWnv4KZ1mezT6PaKxPdDNEnRQaeqPSdo4Wtf5xWrlgpZTnNQmd8-_xXjz_LJHIXdGtT5YosL6If__d1psx6nsW8ckyXx2mKWF2hiM6a1c65keOgtmiEwCsADxBYZv-VAE1eZz8eQHaYmc_dBFZnfevZqaDOcYjSdijRBGXYGCb65-wolO08is5cf6jq-r6m0pWKQ1Gwq8h5BRV4HBqxLVJK-2Mbk2hHF0EsxrUSIE9wTKxqBcH0SL4wOA8GWeiQUSlAncTkwvGQwFBdGVMou67XDz5UeiN0ek6JayemFZcpq-fkHP7l1fNpT_6SgQSRaIxca2rx9Q_nQYrjIczzuvPchbs9MbOdKdEpuolOWAbI4VBGS0FvMiXF596LCLuyAnnAC2YppkMF6AepxMBWtvCpYgL_Kr6KK4e-39_7tzhe1nMZsIRg-2jEYkHv8TB1vr4VaN4IikA6gEVlfml51VW6aiej2YkY4WtdJSeVAOhPgcPYX396v7awfW7liQz4TOIS0sxSaFTTlCrKvqxBz676uzmqxq0oUqTBm_4vlAirm1iluAXP9NwxYKHxIF8SNHaKtsBvMIzjaN79pBHmQdvRc_mJRf-Z9y5Wzn0-m6LmM2c60WA0Hu-vquTPZmbc'; // Your actual token\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Bearer ${token}`);\r\n\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: myHeaders,\r\n      body: \"\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`https://lab.app2serve.com/public/api/broker/${id}`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => getBrokers())\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleRowModesModelChange = (newRowModesModel) => {\r\n    setRowModesModel(newRowModesModel);\r\n  };\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ROW Id',\r\n      width: 100,\r\n      editable: false,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n    },\r\n    {\r\n      field: 'broker_id',\r\n      headerName: 'Broker Id',\r\n      width: 150,\r\n      editable: false,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      type: 'string',\r\n      width: 200,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'email',\r\n      headerName: 'Broker Email',\r\n      type: 'string',\r\n      width: 250,\r\n      editable: false,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n    },\r\n    {\r\n      field: 'date_added',\r\n      headerName: 'Date added',\r\n      width: 200,\r\n      editable: false,\r\n      type: 'string',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n    },\r\n    {\r\n      field: 'cashback',\r\n      headerName: 'Cashback',\r\n      width: 150,\r\n      editable: false,\r\n      type: 'string',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n    },\r\n    {\r\n      field: 'actions',\r\n      type: 'actions',\r\n      headerName: 'Actions',\r\n      width: 150,\r\n      cellClassName: 'actions',\r\n      getActions: ({ id }) => {\r\n        const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit;\r\n\r\n        if (isInEditMode) {\r\n          return [\r\n            <GridActionsCellItem\r\n              icon={<SaveIcon />}\r\n              label=\"Save\"\r\n              sx={{\r\n                color: 'primary.main',\r\n              }}\r\n              onClick={handleSaveClick(id)}\r\n            />,\r\n            <GridActionsCellItem\r\n              icon={<CancelIcon />}\r\n              label=\"Cancel\"\r\n              className=\"textPrimary\"\r\n              onClick={handleCancelClick(id)}\r\n              color=\"inherit\"\r\n            />,\r\n          ];\r\n        }\r\n\r\n        return [\r\n          <GridActionsCellItem\r\n            icon={<EditIcon />}\r\n            label=\"Edit\"\r\n            className=\"textPrimary\"\r\n            onClick={handleEditClick(id)}\r\n            color=\"inherit\"\r\n          />,\r\n          <GridActionsCellItem\r\n            icon={<DeleteIcon />}\r\n            label=\"Delete\"\r\n            onClick={handleDeleteClick(id)}\r\n            color=\"inherit\"\r\n          />,\r\n        ];\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  //form Function\r\n\r\n  const callBack = () => {\r\n    setModeIs(0)\r\n    setViewMode(true)\r\n  }\r\n\r\n\r\n\r\n  const addItem = async (e) => {\r\n    console.log('IN ADD BROKER ITEM');\r\n    setAddError('')\r\n\r\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjg2MDllNzQ0OTgxZjMwNzIyZTllNmRlMDQyMjY2MDJmNDM0NTk3ODBlNzUzM2FiNDc3MGFhMjhiZDFjZjRhMjU5NGNhYjI3MGJhM2UxNzUiLCJpYXQiOjE3MTc2MjA2NDQsIm5iZiI6MTcxNzYyMDY0NCwiZXhwIjoxNzQ5MTU2NjQ0LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.cRRWjwpsvG5cYb-5n_YpfrOHfoWzRTEoYndZffA08MrJxWnv4KZ1mezT6PaKxPdDNEnRQaeqPSdo4Wtf5xWrlgpZTnNQmd8-_xXjz_LJHIXdGtT5YosL6If__d1psx6nsW8ckyXx2mKWF2hiM6a1c65keOgtmiEwCsADxBYZv-VAE1eZz8eQHaYmc_dBFZnfevZqaDOcYjSdijRBGXYGCb65-wolO08is5cf6jq-r6m0pWKQ1Gwq8h5BRV4HBqxLVJK-2Mbk2hHF0EsxrUSIE9wTKxqBcH0SL4wOA8GWeiQUSlAncTkwvGQwFBdGVMou67XDz5UeiN0ek6JayemFZcpq-fkHP7l1fNpT_6SgQSRaIxca2rx9Q_nQYrjIczzuvPchbs9MbOdKdEpuolOWAbI4VBGS0FvMiXF596LCLuyAnnAC2YppkMF6AepxMBWtvCpYgL_Kr6KK4e-39_7tzhe1nMZsIRg-2jEYkHv8TB1vr4VaN4IikA6gEVlfml51VW6aiej2YkY4WtdJSeVAOhPgcPYX396v7awfW7liQz4TOIS0sxSaFTTlCrKvqxBz676uzmqxq0oUqTBm_4vlAirm1iluAXP9NwxYKHxIF8SNHaKtsBvMIzjaN79pBHmQdvRc_mJRf-Z9y5Wzn0-m6LmM2c60WA0Hu-vquTPZmbc'; // Your actual token\r\n\r\n    e.preventDefault();\r\n\r\n    let errors = {};\r\n    Object.keys(formData).forEach(key => {\r\n      if (formData[key] === '') {\r\n        errors[key] = `${key.replace(/_/g, ' ')} is required`;\r\n      }\r\n    });\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return\r\n    }\r\n\r\n    const formdata = new FormData();\r\n    Object.keys(formData).forEach(key => {\r\n      formdata.append(key, formData[key]);\r\n    });\r\n    if (file) {\r\n      formdata.append('logo', file, file.name);\r\n    }\r\n\r\n\r\n    if (logoFile) {\r\n      formdata.append('image', logoFile, logoFile.name);\r\n    }\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Bearer ${token}`);\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://lab.app2serve.com/public/api/brokers\", requestOptions);\r\n      const result = await response.json();\r\n      console.log('response', response);\r\n      console.log(result);\r\n\r\n      if (result.status == 1) {\r\n        getBrokers();\r\n        setViewMode(true)\r\n      } else {\r\n        const firstKey = Object.keys(result)[0];\r\n        const firstMessage = result[firstKey][0];\r\n        setAddError(firstMessage)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setAddError(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const editItem = async (e) => {\r\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjg2MDllNzQ0OTgxZjMwNzIyZTllNmRlMDQyMjY2MDJmNDM0NTk3ODBlNzUzM2FiNDc3MGFhMjhiZDFjZjRhMjU5NGNhYjI3MGJhM2UxNzUiLCJpYXQiOjE3MTc2MjA2NDQsIm5iZiI6MTcxNzYyMDY0NCwiZXhwIjoxNzQ5MTU2NjQ0LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.cRRWjwpsvG5cYb-5n_YpfrOHfoWzRTEoYndZffA08MrJxWnv4KZ1mezT6PaKxPdDNEnRQaeqPSdo4Wtf5xWrlgpZTnNQmd8-_xXjz_LJHIXdGtT5YosL6If__d1psx6nsW8ckyXx2mKWF2hiM6a1c65keOgtmiEwCsADxBYZv-VAE1eZz8eQHaYmc_dBFZnfevZqaDOcYjSdijRBGXYGCb65-wolO08is5cf6jq-r6m0pWKQ1Gwq8h5BRV4HBqxLVJK-2Mbk2hHF0EsxrUSIE9wTKxqBcH0SL4wOA8GWeiQUSlAncTkwvGQwFBdGVMou67XDz5UeiN0ek6JayemFZcpq-fkHP7l1fNpT_6SgQSRaIxca2rx9Q_nQYrjIczzuvPchbs9MbOdKdEpuolOWAbI4VBGS0FvMiXF596LCLuyAnnAC2YppkMF6AepxMBWtvCpYgL_Kr6KK4e-39_7tzhe1nMZsIRg-2jEYkHv8TB1vr4VaN4IikA6gEVlfml51VW6aiej2YkY4WtdJSeVAOhPgcPYX396v7awfW7liQz4TOIS0sxSaFTTlCrKvqxBz676uzmqxq0oUqTBm_4vlAirm1iluAXP9NwxYKHxIF8SNHaKtsBvMIzjaN79pBHmQdvRc_mJRf-Z9y5Wzn0-m6LmM2c60WA0Hu-vquTPZmbc'; // Your actual token\r\n    e.preventDefault();\r\n    const id = formData.broker_id\r\n\r\n    let errors = {};\r\n    Object.keys(formData).forEach(key => {\r\n      if (formData[key] === '') {\r\n        errors[key] = `${key.replace(/_/g, ' ')} is required`;\r\n      }\r\n    });\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return\r\n    }\r\n\r\n    const formdata = new FormData();\r\n    Object.keys(editForm).forEach(key => {\r\n      formdata.append(key, editForm[key]);\r\n    });\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Authorization', `Bearer ${token}`);\r\n\r\n    console.log('editForm', editForm);\r\n\r\n    const requestOptions = {\r\n      method: \"PATCH\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify(editForm),\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`https://lab.app2serve.com/public/api/broker/${id}`, requestOptions);\r\n      const result = await response.json();\r\n      console.log(result);\r\n      if (result.status) {\r\n        setViewMode(true)\r\n        setAddError('')\r\n      } else {\r\n        setAddError('There is an error, please try again later.')\r\n      }\r\n\r\n    } catch (error) {\r\n      setAddError('There is an error, Or email has already been taken, please try again later.')\r\n      console.error(\"Error:\", error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    if (e.target.files[0]) {\r\n      setImagePreview(URL.createObjectURL(e.target.files[0])); // Create a preview URL for the selected image\r\n    }\r\n  };\r\n\r\n  const handleLogoChange = (e) => {\r\n    setLogoFile(e.target.files[0]);\r\n    if (e.target.files[0]) {\r\n      setLogoPreview(URL.createObjectURL(e.target.files[0])); // Create a preview URL for the selected image\r\n    }\r\n  };\r\n\r\n  //form Function\r\n\r\n\r\n\r\n\r\n  // form account type \r\n\r\n\r\n  // Handle form field changes\r\n  const handleChangeType = (e) => {\r\n    const { name, value } = e.target;\r\n    setAccountType({\r\n      ...accountType,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // Validate the form inputs\r\n  const validateForm = () => {\r\n    console.log('FFFFFFFFFFFFF', accountType);\r\n    const errors = {};\r\n    Object.keys(accountType).forEach(key => {\r\n      if (!accountType[key]) {\r\n        errors[key] = 'This field is required';\r\n      }\r\n    });\r\n    return errors;\r\n  };\r\n\r\n\r\n  const handleSubmitAccountType = async (e) => {\r\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMjg2MDllNzQ0OTgxZjMwNzIyZTllNmRlMDQyMjY2MDJmNDM0NTk3ODBlNzUzM2FiNDc3MGFhMjhiZDFjZjRhMjU5NGNhYjI3MGJhM2UxNzUiLCJpYXQiOjE3MTc2MjA2NDQsIm5iZiI6MTcxNzYyMDY0NCwiZXhwIjoxNzQ5MTU2NjQ0LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.cRRWjwpsvG5cYb-5n_YpfrOHfoWzRTEoYndZffA08MrJxWnv4KZ1mezT6PaKxPdDNEnRQaeqPSdo4Wtf5xWrlgpZTnNQmd8-_xXjz_LJHIXdGtT5YosL6If__d1psx6nsW8ckyXx2mKWF2hiM6a1c65keOgtmiEwCsADxBYZv-VAE1eZz8eQHaYmc_dBFZnfevZqaDOcYjSdijRBGXYGCb65-wolO08is5cf6jq-r6m0pWKQ1Gwq8h5BRV4HBqxLVJK-2Mbk2hHF0EsxrUSIE9wTKxqBcH0SL4wOA8GWeiQUSlAncTkwvGQwFBdGVMou67XDz5UeiN0ek6JayemFZcpq-fkHP7l1fNpT_6SgQSRaIxca2rx9Q_nQYrjIczzuvPchbs9MbOdKdEpuolOWAbI4VBGS0FvMiXF596LCLuyAnnAC2YppkMF6AepxMBWtvCpYgL_Kr6KK4e-39_7tzhe1nMZsIRg-2jEYkHv8TB1vr4VaN4IikA6gEVlfml51VW6aiej2YkY4WtdJSeVAOhPgcPYX396v7awfW7liQz4TOIS0sxSaFTTlCrKvqxBz676uzmqxq0oUqTBm_4vlAirm1iluAXP9NwxYKHxIF8SNHaKtsBvMIzjaN79pBHmQdvRc_mJRf-Z9y5Wzn0-m6LmM2c60WA0Hu-vquTPZmbc'; // Your actual token\r\n\r\n    e.preventDefault();\r\n\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length > 0) {\r\n      setErrorsAccountType(formErrors);\r\n      return;\r\n    }\r\n\r\n    setLoadingAccountType(true);\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Authorization', `Bearer ${token}`);\r\n\r\n\r\n    const raw = JSON.stringify(accountType);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n    console.log('requestOptions', requestOptions);\r\n    try {\r\n      const response = await fetch('https://lab.app2serve.com/public/api/broker-account-type', requestOptions);\r\n      if (response.ok) {\r\n        const result = await response.text();\r\n        console.log(result);\r\n        setSuccess(true);\r\n      } else {\r\n        console.error('Error:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoadingAccountType(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Row>\r\n          <Col lg=\"12\">\r\n            <Card>\r\n              {viewMode ? (\r\n                <CardBody>\r\n                  <CardTitle tag=\"h3\">Broker Listing</CardTitle>\r\n                  <Box\r\n                    sx={{\r\n                      height: 500,\r\n                      width: '100%',\r\n                      '& .actions': {\r\n                        color: 'text.secondary',\r\n                      },\r\n                      '& .textPrimary': {\r\n                        color: 'text.primary',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <DataGrid\r\n                      rows={rows}\r\n                      columns={columns}\r\n                      rowModesModel={rowModesModel}\r\n                      onRowModesModelChange={handleRowModesModelChange}\r\n                      onRowEditStop={handleRowEditStop}\r\n                      processRowUpdate={processRowUpdate}\r\n                      slots={{ toolbar: EditToolbar }}\r\n                      slotProps={{ toolbar: { setRows, setRowModesModel } }}\r\n                    />\r\n                  </Box>\r\n                </CardBody>\r\n              ) : (\r\n                <CardBody>\r\n                  <div>\r\n                    <div className=\"dev-row\" style={{ marginBottom: 10 }}>\r\n                      <span><ArrowBackIcon onClick={() => callBack()} /></span>\r\n                      <span style={{ marginInline: 10 }}>Back</span>\r\n                    </div>\r\n                    {modeIs === 1 ? <h1>Add Broker</h1> : <h1>Edit {formData.name} Broker</h1>}\r\n                    <Container>\r\n                      <Form onSubmit={handleSubmit}>\r\n\r\n                        <Row style={{ marginTop: 50 }}>\r\n                          <Col md=\"5\" className=\"text-center\">\r\n                            <FormGroup>\r\n                              <div>\r\n                                <img\r\n                                  src={imagePreview}\r\n                                  alt=\"Image Preview\"\r\n                                  id=\"imagePreview\"\r\n                                  style={{ border: '2px solid #26c6da', width: 150, maxWidth: 200, height: 'auto', maxHeight: '130', objectFit: 'cover', borderRadius: 9 }}\r\n                                />\r\n                              </div>\r\n                            </FormGroup>\r\n                            <Label for=\"logo\">Logo for carousel</Label>\r\n                          </Col>\r\n\r\n\r\n                          <Col md=\"5\" className=\"text-center\">\r\n                            <FormGroup>\r\n                              <div>\r\n                                <img\r\n                                  src={logoPreview}\r\n                                  alt=\"Image Preview\"\r\n                                  id=\"logoPreview\"\r\n                                  style={{ border: '2px solid #26c6da', width: 150, maxWidth: 200, height: 'auto', maxHeight: '130', objectFit: 'cover', borderRadius: 9 }}\r\n                                />\r\n                              </div>\r\n                            </FormGroup>\r\n                            <Label for=\"logoImg\">Logo</Label>\r\n                          </Col>\r\n\r\n\r\n\r\n\r\n                        </Row>\r\n\r\n                        <FormGroup>\r\n                          <Label for=\"logo\">Logo for carousel</Label>\r\n                          <Input type=\"file\" id=\"logo\" name=\"logo\" onChange={handleFileChange} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                          <Label for=\"logoImg\">Logo</Label>\r\n                          <Input type=\"file\" id=\"logoImg\" name=\"logoImg\" onChange={handleLogoChange} />\r\n                        </FormGroup>\r\n                        {Object.keys(formData).map((fieldName, index) => (\r\n                          <FormGroup key={index}>\r\n                            <Label for={fieldName}>{fieldName.replace(/_/g, ' ')}</Label>\r\n                            {fieldName === 'currency' ? (\r\n                              <Input\r\n                                type=\"select\"\r\n                                id={fieldName}\r\n                                name={fieldName}\r\n                                value={formData[fieldName]}\r\n                                onChange={handleCurrencyChange}\r\n                              >\r\n                                <option value=\"\">Select Currency</option>\r\n                                {currencyOptions.map(option => (\r\n                                  <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                  </option>\r\n                                ))}\r\n                              </Input>\r\n                            ) : (\r\n                              <Input\r\n                                type=\"text\"\r\n                                id={fieldName}\r\n                                name={fieldName}\r\n                                value={formData[fieldName]}\r\n                                onChange={handleInputChange}\r\n                                invalid={formErrors[fieldName] !== undefined}\r\n                                disabled={(fieldName == 'broker_id') || (fieldName == 'logo') || (fieldName == 'image') || (fieldName == 'avg_rating') || (fieldName == 'id') ? true : false}\r\n\r\n                              />\r\n                            )}\r\n                            {formErrors[fieldName] && <Alert color=\"danger\">{formErrors[fieldName]}</Alert>}\r\n                          </FormGroup>\r\n                        ))}\r\n                        <Button style={{ backgroundColor: '#26c6da', color: '#ffffff' }} type=\"submit\">Submit</Button>\r\n                        {addError && <div className=\"alert alert-danger mt-3\" role=\"alert\">{addError}</div>}\r\n                      </Form>\r\n                    </Container>\r\n                  </div>\r\n                  {modeIs === 2 &&\r\n                    <div style={{ marginTop: 30 }}>\r\n                      <div className=\"dev-row\" style={{ marginBottom: 10 }}></div>\r\n                      <h1>Add Account Type</h1>\r\n                      <Container>\r\n                        <Form onSubmit={handleSubmitAccountType}>\r\n                          <FormGroup>\r\n                            <Label for=\"account_type\">Account Type</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"account_type\"\r\n                              id=\"account_type\"\r\n                              value={accountType.account_type}\r\n                              onChange={handleChangeType}\r\n                              invalid={!!errorsAccountType.account_type}\r\n                            />\r\n                            <FormFeedback>{errorsAccountType.account_type}</FormFeedback>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label for=\"account_type_minimum_trading_size\">Minimum Trading Size</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"account_type_minimum_trading_size\"\r\n                              id=\"account_type_minimum_trading_size\"\r\n                              value={accountType.account_type_minimum_trading_size}\r\n                              onChange={handleChangeType}\r\n                              invalid={!!errorsAccountType.account_type_minimum_trading_size}\r\n                            />\r\n                            <FormFeedback>{errorsAccountType.account_type_minimum_trading_size}</FormFeedback>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label for=\"account_type_maximum_trading_size\">Maximum Trading Size</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"account_type_maximum_trading_size\"\r\n                              id=\"account_type_maximum_trading_size\"\r\n                              value={accountType.account_type_maximum_trading_size}\r\n                              onChange={handleChangeType}\r\n                              invalid={!!errorsAccountType.account_type_maximum_trading_size}\r\n                            />\r\n                            <FormFeedback>{errorsAccountType.account_type_maximum_trading_size}</FormFeedback>\r\n                          </FormGroup>\r\n\r\n                          <Button style={{ backgroundColor: '#26c6da', color: '#ffffff' }} type=\"submit\">Save</Button>\r\n                          <Button style={{ backgroundColor: '#e57373', color: '#ffffff', marginLeft: 10 }} onClick={() => setModeIs(0)}>Cancel</Button>\r\n                        </Form>\r\n                      </Container>\r\n                    </div>\r\n                  }\r\n                </CardBody>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrokersList;\r\n"],"names":["callApi","domain","data","headerToken","methodName","arguments","length","undefined","files","configApi","JSON","stringify","key","resData","async","returnedValue","response","fetch","res","json","console","log","status","concat","error","callAsyncAPI","callApiWithToken","token","initialFormAccountType","account_type","account_type_minimum_trading_size","account_type_maximum_trading_size","broker_id","initialFormDataWithData","name","email","description","cashback","account_currency","currency","title","entity_name","broker_type","branch_offices","headquarters","bonus","islamic_accounts","trailing_stop","hedging","scalping","ea","segregated_accounts","number_of_instruments","categories_of_instruments","channels","hours","languages","pc_platforms","mobile_platforms","demo_period","MAM_PAMM","leverage_levels","margin_call_evel","stop_out_level","closing_method_stop_out","avg_spread_on_EURUSD_val_1","avg_spread_on_EURUSD_val_2","avg_spread_on_EURUSD_val_3","commissions_on_FX_val_1","commissions_on_FX_val_2","commissions_on_FX_val_3","FX_margin_bonus","FX_scalping_account","FX_floating_bonus","metals_margin_bonus","metals_floating_bonus","metals_scalping_account","energies_margin_bonus","energies_floating_bonus","energies_scalping_account","indicies_margin_bonus","indicies_scalping_account","indicies_floating_bonus","stocks_margin_bonus","stocks_floating_bonus","stocks_scalping_account","minimum_deposit_val1","minimum_deposit_val2","minimum_deposit_val3","payment_methods","youtube_link","whatsapp_link","twitter_link","instagram_link","facebook_link","currencyOptions","value","label","BrokersList","viewMode","setViewMode","useState","rows","setRows","rowModesModel","setRowModesModel","formErrors","setFormErrors","formSubmitted","setFormSubmitted","formData","setFormData","editForm","setEditForm","file","setFile","logoFile","setLogoFile","modeIs","setModeIs","imagePreview","setImagePreview","logoPreview","setLogoPreview","errorsAccountType","setErrorsAccountType","loadingAccountType","setLoadingAccountType","success","setSuccess","addError","setAddError","responseCash","setresponseCash","loading","setLoading","textSearch","setTextSearch","imageUrl","accountType","setAccountType","useEffect","getBrokers","brokersWid","brokers","map","obj","index","id","handleInputChange","e","target","prevState","handleCurrencyChange","addBroker","getObjectById","find","handleEditClick","item","logo","image","handleDeleteClick","window","confirm","deleteItem","myHeaders","Headers","append","requestOptions","method","headers","body","redirect","then","text","result","catch","columns","field","headerName","width","editable","align","headerAlign","type","cellClassName","getActions","_ref","_rowModesModel$id","mode","GridRowModes","Edit","_jsx","GridActionsCellItem","icon","SaveIcon","sx","color","onClick","CancelIcon","className","EditIcon","DeleteIcon","addItem","preventDefault","errors","Object","keys","forEach","replace","formdata","FormData","firstMessage","editItem","handleChangeType","React","children","Row","Col","lg","Card","_jsxs","CardBody","CardTitle","tag","Box","height","DataGrid","onRowModesModelChange","newRowModesModel","onRowEditStop","handleRowEditStop","params","event","reason","GridRowEditStopReasons","rowFocusOut","defaultMuiPrevented","processRowUpdate","newRow","slots","toolbar","props","GridToolbarContainer","Button","style","backgroundColor","startIcon","AddIcon","slotProps","marginBottom","ArrowBackIcon","marginInline","Container","Form","onSubmit","marginTop","md","FormGroup","src","alt","border","maxWidth","maxHeight","objectFit","borderRadius","Label","for","Input","onChange","URL","createObjectURL","fieldName","option","invalid","disabled","Alert","role","validateForm","ok","statusText","FormFeedback","marginLeft"],"sourceRoot":""}