{"version":3,"file":"static/js/431.65d1aae3.chunk.js","mappings":"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","sources":["api/api.js","components/dashboard/ProjectTable.js","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","components/dashboard/Blog.js","views/Starter.js"],"sourcesContent":["// import { Alert, I18nManager } from \"react-native\";\r\n// import all strings we need, Translation have all messages and lables in several languages ((MOHAJ))\r\n// import Strings from '../Translation';\r\n// import Local storage\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n//START To chick language ((MOHAJ))\r\n// var IS_RTL = I18nManager.isRTL;\r\n// if (IS_RTL) {\r\n//     var strings = Strings.ar\r\n// } else {\r\n//     var strings = Strings.enUS\r\n// }\r\n//END To chick language ((MOHAJ))\r\n\r\n// START HTTP call  \r\nconst callAsyncAPI = async (domain, data, returnedValue = '') => {\r\n    try {\r\n        let response = await fetch(domain, data);\r\n        let res = await response.json();\r\n\r\n        console.log('RESPONSE RES', res)\r\n        //console.log('RESPONSE ALL', res)\r\n        if (response.status == 404) {\r\n            //not found ((MOHAJ))\r\n            console.log('404', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status == 401) {\r\n            //authentication Error ((MOHAJ))\r\n            console.log('401', response, domain, data);\r\n\r\n            return res;\r\n        } else if (response.status == 500) {\r\n            //internal server error ((MOHAJ))\r\n            console.log('500', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status >= 200 && response.status < 300) {\r\n            //success\r\n            return returnedValue ? res[`${returnedValue}`] : res;\r\n        } else if (response.status == 405 || response.status == 400) {\r\n            //405 => request refused \r\n            //400 => bad request\r\n            console.log('405 || 400', response, domain, data);\r\n\r\n            return false;\r\n        } else {\r\n            //internet error\r\n            console.log('internet', response, domain, data);\r\n\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        //data error\r\n        console.log('data error', error, domain, data);\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\n//START headers && body Processing To send api FUNC MOHAJ\r\nconst callApi = (domain, data, headerToken, methodName = 'POST', files = false) => {\r\n    var configApi = {};\r\n    configApi['method'] = methodName;\r\n    if (methodName != 'GET') {\r\n        configApi['body'] = files ? data : JSON.stringify(data);\r\n    } else {\r\n        domain += '?';\r\n        for (const key in data) {\r\n            domain += key + '=' + data[key] + '&';\r\n        }\r\n    }\r\n    if (methodName != 'GET') {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    } else {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken\r\n        }\r\n    }\r\n    let resData = callAsyncAPI(domain, configApi);\r\n    return resData;\r\n};\r\n//END headers && body Processing To send api FUNC MOHAJ\r\n\r\n\r\n// START To chick isLohin OR token found MOHAJ\r\nconst checkLoginData = async () => {\r\n    // let token = await AsyncStorage.getItem('token');\r\n    // let loginData = {};\r\n    // if (loginMethod == 'email') {\r\n    //     let email = await AsyncStorage.getItem('email');\r\n    //     let password = await AsyncStorage.getItem('password');\r\n    //     loginData = {\r\n    //         username: email,\r\n    //         password: password,\r\n    //     }\r\n    // }\r\n    var resData = await 'token';\r\n    return resData;\r\n}\r\n// END To chick isLohin OR token found MOHAJ\r\n\r\n//START Data Processing WITH Token MOHAJ\r\nconst callApiWithToken = async (domain, data, methodName = 'POST', files = 'aaaaa') => {\r\n    let token = files\r\n    let resData = false;\r\n    if (token != false && token != undefined && token != '' && token != null)\r\n        resData = await callApi(domain, data, token, methodName, false);\r\n    return resData;\r\n};\r\n//END Data Processing WITH Token MOHAJ\r\n\r\nexport { callApi, callApiWithToken };\r\n\r\n\r\n\r\n// How I can use this platform ?\r\n// ok if your metohd is \"GIT\" you can call api like that\r\n\r\n// var data = await callApiWithToken(config.DOMAIN, { Page: 1, ItemsPerPage: 100 }, 'GET');\r\n// just you need sent domain and data and method Type and you can set DOMAIN static in callAsyncAPI Function\r\n\r\n\r\n// and about \"POST\" method you can call like that\r\n// let ApiData = {\r\n//     'name': 'MoahmmedHajeer',\r\n//     'password': 'Eska@123',\r\n// };\r\n// var data = await callApiWithToken(config.DOMAIN, ApiData);\r\n\r\n// Author : Mohammed Hajeer // Wireless ESKADENIA ","import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { callApiWithToken } from '../../api/api'\r\n\r\nimport user1 from \"../../assets/images/users/user1.jpg\";\r\nimport user2 from \"../../assets/images/users/user2.jpg\";\r\nimport user3 from \"../../assets/images/users/user3.jpg\";\r\nimport user4 from \"../../assets/images/users/user4.jpg\";\r\nimport user5 from \"../../assets/images/users/user5.jpg\";\r\n\r\nconst tableData = [\r\n  {\r\n    avatar: user1,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user2,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Lading pro React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user3,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Elite React\",\r\n    status: \"holt\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user4,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n];\r\nconst initialRows = [\r\n  {\r\n    id: 'Loading',\r\n    broker_id: 'Loading',\r\n    name: 'Loading',\r\n    email: 'Loading',\r\n    dateAdded: 'Loading',\r\n    cashback: 'Loading',\r\n  },\r\n];\r\n\r\nconst ProjectTables = () => {\r\n\r\n  const [rows, setRows] = React.useState(initialRows);\r\n  const [rowModesModel, setRowModesModel] = React.useState({});\r\n  const [brokersList, setBrokersList] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n  \r\n  const getUsers = async () => {\r\n    var brokersWid = []\r\n    setLoading(true)\r\n    const response = await callApiWithToken('https://lab.app2serve.com/public/api/brokers', {}, 'GET');\r\n    brokersWid = await response.brokers\r\n    await brokersWid.map((obj, index) => {\r\n      obj.id = index + 1;\r\n    });\r\n\r\n    await setRows(await brokersWid)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Project Listing</CardTitle>\r\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n            Overview of the projects\r\n          </CardSubtitle>\r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Team Lead</th>\r\n                <th>Project</th>\r\n\r\n                <th>Status</th>\r\n                <th>Weeks</th>\r\n                <th>Budget</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((tdata, index) => (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.avatar}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\r\n                        <span className=\"text-muted\">{tdata.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{tdata.project}</td>\r\n                  <td>\r\n                    {tdata.status === \"pending\" ? (\r\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : tdata.status === \"holt\" ? (\r\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : (\r\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\r\n                    )}\r\n                  </td>\r\n                  <td>{tdata.weeks}</td>\r\n                  <td>{tdata.budget}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst SalesChart = () => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      stacked: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 4,\r\n      colors: [\"transparent\"],\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"30%\",\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    colors: [\"#0d6efd\", \"#009efb\", \"#6771dc\"],\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n      ],\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        options: {\r\n          plotOptions: {\r\n            bar: {\r\n              columnWidth: \"60%\",\r\n              borderRadius: 7,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"2020\",\r\n      data: [20, 40, 50, 30, 40, 50, 30, 30, 40],\r\n    },\r\n    {\r\n      name: \"2022\",\r\n      data: [10, 20, 40, 60, 20, 40, 60, 60, 20],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\r\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\r\n          Yearly Sales Report\r\n        </CardSubtitle>\r\n        <Chart options={options} series={series} type=\"bar\" height=\"379\" />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst FeedData = [\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"primary\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New user registered.\",\r\n    icon: \"bi bi-person\",\r\n    color: \"info\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"danger\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New order received.\",\r\n    icon: \"bi bi-bag-check\",\r\n    color: \"success\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"dark\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"warning\",\r\n    date: \"6 minute ago\",\r\n  },\r\n];\r\n\r\nconst Feeds = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Feeds</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Widget you can use\r\n        </CardSubtitle>\r\n        <ListGroup flush className=\"mt-4\">\r\n          {FeedData.map((feed, index) => (\r\n            <ListGroupItem\r\n              key={index}\r\n              action\r\n              href=\"/\"\r\n              tag=\"a\"\r\n              className=\"d-flex align-items-center p-3 border-0\"\r\n            >\r\n              <Button\r\n                className=\"rounded-circle me-3\"\r\n                size=\"sm\"\r\n                color={feed.color}\r\n              >\r\n                <i className={feed.icon}></i>\r\n              </Button>\r\n              {feed.title}\r\n              <small className=\"ms-auto text-muted text-small\">\r\n                {feed.date}\r\n              </small>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Blog = (props) => {\r\n  return (\r\n    <Card>\r\n      <CardImg alt=\"Card image cap\" src={props.image} />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\r\n        <CardText className=\"mt-3\">{props.text}</CardText>\r\n        <Button color={props.color}>Read More</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import { Col, Row } from \"reactstrap\";\r\nimport SalesChart from \"../components/dashboard/SalesChart\";\r\nimport Feeds from \"../components/dashboard/Feeds\";\r\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\r\n\r\nimport Blog from \"../components/dashboard/Blog\";\r\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\r\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\r\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\r\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\r\n\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: \"This is simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: \"Lets be simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Don't Lamp blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: \"Simple is beautiful\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n];\r\n\r\nconst Starter = () => {\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n\r\n      {/***Sales & Feed***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\r\n          <Feeds />\r\n        </Col>\r\n      </Row>\r\n      {/***Table ***/}\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <ProjectTables />\r\n        </Col>\r\n      </Row>\r\n      {/***Blog Cards***/}\r\n      <Row>\r\n        {BlogData.map((blg, index) => (\r\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\r\n            <Blog\r\n              image={blg.image}\r\n              title={blg.title}\r\n              subtitle={blg.subtitle}\r\n              text={blg.description}\r\n              color={blg.btnbg}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Starter;\r\n"],"names":["callApi","domain","data","headerToken","methodName","arguments","length","undefined","files","configApi","JSON","stringify","key","resData","async","returnedValue","response","fetch","res","json","console","log","status","concat","error","callAsyncAPI","callApiWithToken","token","tableData","avatar","user1","name","email","project","weeks","budget","user2","user3","user4","user5","initialRows","id","broker_id","dateAdded","cashback","ProjectTables","rows","setRows","React","rowModesModel","setRowModesModel","brokersList","setBrokersList","useState","loading","setLoading","useEffect","getUsers","brokersWid","brokers","map","obj","index","_jsx","children","Card","_jsxs","CardBody","CardTitle","tag","CardSubtitle","className","Table","responsive","borderless","tdata","src","alt","width","height","SalesChart","Chart","options","chart","toolbar","show","stacked","dataLabels","enabled","stroke","colors","legend","plotOptions","bar","horizontal","columnWidth","borderRadius","xaxis","categories","breakpoint","series","type","FeedData","title","icon","color","date","Feeds","ListGroup","flush","feed","ListGroupItem","action","href","Button","size","props","CardImg","image","subtitle","CardText","text","BlogData","description","btnbg","Starter","Row","Col","sm","lg","xl","xxl","blg","Blog"],"sourceRoot":""}