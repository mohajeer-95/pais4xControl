{"version":3,"file":"static/js/395.e3427255.chunk.js","mappings":"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","sources":["api/api.js","components/dashboard/ProjectTable.js","views/ui/Tables.js"],"sourcesContent":["// import { Alert, I18nManager } from \"react-native\";\r\n// import all strings we need, Translation have all messages and lables in several languages ((MOHAJ))\r\n// import Strings from '../Translation';\r\n// import Local storage\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n//START To chick language ((MOHAJ))\r\n// var IS_RTL = I18nManager.isRTL;\r\n// if (IS_RTL) {\r\n//     var strings = Strings.ar\r\n// } else {\r\n//     var strings = Strings.enUS\r\n// }\r\n//END To chick language ((MOHAJ))\r\n\r\n// START HTTP call  \r\nconst callAsyncAPI = async (domain, data, returnedValue = '') => {\r\n    try {\r\n        let response = await fetch(domain, data);\r\n        let res = await response.json();\r\n\r\n        console.log('RESPONSE RES', res)\r\n        //console.log('RESPONSE ALL', res)\r\n        if (response.status == 404) {\r\n            //not found ((MOHAJ))\r\n            console.log('404', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status == 401) {\r\n            //authentication Error ((MOHAJ))\r\n            console.log('401', response, domain, data);\r\n\r\n            return res;\r\n        } else if (response.status == 500) {\r\n            //internal server error ((MOHAJ))\r\n            console.log('500', response, domain, data);\r\n\r\n            return false;\r\n        } else if (response.status >= 200 && response.status < 300) {\r\n            //success\r\n            return returnedValue ? res[`${returnedValue}`] : res;\r\n        } else if (response.status == 405 || response.status == 400) {\r\n            //405 => request refused \r\n            //400 => bad request\r\n            console.log('405 || 400', response, domain, data);\r\n\r\n            return false;\r\n        } else {\r\n            //internet error\r\n            console.log('internet', response, domain, data);\r\n\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        //data error\r\n        console.log('data error', error, domain, data);\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\n//START headers && body Processing To send api FUNC MOHAJ\r\nconst callApi = (domain, data, headerToken, methodName = 'POST', files = false) => {\r\n    var configApi = {};\r\n    configApi['method'] = methodName;\r\n    if (methodName != 'GET') {\r\n        configApi['body'] = files ? data : JSON.stringify(data);\r\n    } else {\r\n        domain += '?';\r\n        for (const key in data) {\r\n            domain += key + '=' + data[key] + '&';\r\n        }\r\n    }\r\n    if (methodName != 'GET') {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    } else {\r\n        configApi['headers'] = {\r\n            'X-Custom-Token': headerToken\r\n        }\r\n    }\r\n    let resData = callAsyncAPI(domain, configApi);\r\n    return resData;\r\n};\r\n//END headers && body Processing To send api FUNC MOHAJ\r\n\r\n\r\n// START To chick isLohin OR token found MOHAJ\r\nconst checkLoginData = async () => {\r\n    // let token = await AsyncStorage.getItem('token');\r\n    // let loginData = {};\r\n    // if (loginMethod == 'email') {\r\n    //     let email = await AsyncStorage.getItem('email');\r\n    //     let password = await AsyncStorage.getItem('password');\r\n    //     loginData = {\r\n    //         username: email,\r\n    //         password: password,\r\n    //     }\r\n    // }\r\n    var resData = await 'token';\r\n    return resData;\r\n}\r\n// END To chick isLohin OR token found MOHAJ\r\n\r\n//START Data Processing WITH Token MOHAJ\r\nconst callApiWithToken = async (domain, data, methodName = 'POST', files = 'aaaaa') => {\r\n    let token = files\r\n    let resData = false;\r\n    if (token != false && token != undefined && token != '' && token != null)\r\n        resData = await callApi(domain, data, token, methodName, false);\r\n    return resData;\r\n};\r\n//END Data Processing WITH Token MOHAJ\r\n\r\nexport { callApi, callApiWithToken };\r\n\r\n\r\n\r\n// How I can use this platform ?\r\n// ok if your metohd is \"GIT\" you can call api like that\r\n\r\n// var data = await callApiWithToken(config.DOMAIN, { Page: 1, ItemsPerPage: 100 }, 'GET');\r\n// just you need sent domain and data and method Type and you can set DOMAIN static in callAsyncAPI Function\r\n\r\n\r\n// and about \"POST\" method you can call like that\r\n// let ApiData = {\r\n//     'name': 'MoahmmedHajeer',\r\n//     'password': 'Eska@123',\r\n// };\r\n// var data = await callApiWithToken(config.DOMAIN, ApiData);\r\n\r\n// Author : Mohammed Hajeer // Wireless ESKADENIA ","import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { callApiWithToken } from '../../api/api'\r\n\r\nimport user1 from \"../../assets/images/users/user1.jpg\";\r\nimport user2 from \"../../assets/images/users/user2.jpg\";\r\nimport user3 from \"../../assets/images/users/user3.jpg\";\r\nimport user4 from \"../../assets/images/users/user4.jpg\";\r\nimport user5 from \"../../assets/images/users/user5.jpg\";\r\n\r\nconst tableData = [\r\n  {\r\n    avatar: user1,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user2,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Lading pro React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user3,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Elite React\",\r\n    status: \"holt\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user4,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n];\r\nconst initialRows = [\r\n  {\r\n    id: 'Loading',\r\n    broker_id: 'Loading',\r\n    name: 'Loading',\r\n    email: 'Loading',\r\n    dateAdded: 'Loading',\r\n    cashback: 'Loading',\r\n  },\r\n];\r\n\r\nconst ProjectTables = () => {\r\n\r\n  const [rows, setRows] = React.useState(initialRows);\r\n  const [rowModesModel, setRowModesModel] = React.useState({});\r\n  const [brokersList, setBrokersList] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n  \r\n  const getUsers = async () => {\r\n    var brokersWid = []\r\n    setLoading(true)\r\n    const response = await callApiWithToken('https://lab.app2serve.com/public/api/brokers', {}, 'GET');\r\n    brokersWid = await response.brokers\r\n    await brokersWid.map((obj, index) => {\r\n      obj.id = index + 1;\r\n    });\r\n\r\n    await setRows(await brokersWid)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Project Listing</CardTitle>\r\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n            Overview of the projects\r\n          </CardSubtitle>\r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Team Lead</th>\r\n                <th>Project</th>\r\n\r\n                <th>Status</th>\r\n                <th>Weeks</th>\r\n                <th>Budget</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((tdata, index) => (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.avatar}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\r\n                        <span className=\"text-muted\">{tdata.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{tdata.project}</td>\r\n                  <td>\r\n                    {tdata.status === \"pending\" ? (\r\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : tdata.status === \"holt\" ? (\r\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : (\r\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\r\n                    )}\r\n                  </td>\r\n                  <td>{tdata.weeks}</td>\r\n                  <td>{tdata.budget}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","import ProjectTables from \"../../components/dashboard/ProjectTable\";\r\nimport { Row, Col, Table, Card, CardTitle, CardBody } from \"reactstrap\";\r\n\r\nconst Tables = () => {\r\n  return (\r\n    <Row>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* table-1*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <Col lg=\"12\">\r\n        <ProjectTables />\r\n      </Col>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* table-2*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <Col lg=\"12\">\r\n        <Card>\r\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i className=\"bi bi-card-text me-2\"> </i>\r\n            Table with Border\r\n          </CardTitle>\r\n          <CardBody className=\"\">\r\n            <Table bordered>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Username</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td>Mark</td>\r\n                  <td>Otto</td>\r\n                  <td>@mdo</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td>Jacob</td>\r\n                  <td>Thornton</td>\r\n                  <td>@fat</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td>Larry</td>\r\n                  <td>the Bird</td>\r\n                  <td>@twitter</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* table-3*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <Col lg=\"12\">\r\n        <Card>\r\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i className=\"bi bi-card-text me-2\"> </i>\r\n            Table with Striped\r\n          </CardTitle>\r\n          <CardBody className=\"\">\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Username</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td>Mark</td>\r\n                  <td>Otto</td>\r\n                  <td>@mdo</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td>Jacob</td>\r\n                  <td>Thornton</td>\r\n                  <td>@fat</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td>Larry</td>\r\n                  <td>the Bird</td>\r\n                  <td>@twitter</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* table-3*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <Col lg=\"12\">\r\n        <Card>\r\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i className=\"bi bi-card-text me-2\"> </i>\r\n            Table with Hover\r\n          </CardTitle>\r\n          <CardBody className=\"\">\r\n            <Table bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Username</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td>Mark</td>\r\n                  <td>Otto</td>\r\n                  <td>@mdo</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td>Jacob</td>\r\n                  <td>Thornton</td>\r\n                  <td>@fat</td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td>Larry</td>\r\n                  <td>the Bird</td>\r\n                  <td>@twitter</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n"],"names":["callApi","domain","data","headerToken","methodName","arguments","length","undefined","files","configApi","JSON","stringify","key","resData","async","returnedValue","response","fetch","res","json","console","log","status","concat","error","callAsyncAPI","callApiWithToken","token","tableData","avatar","user1","name","email","project","weeks","budget","user2","user3","user4","user5","initialRows","id","broker_id","dateAdded","cashback","ProjectTables","rows","setRows","React","rowModesModel","setRowModesModel","brokersList","setBrokersList","useState","loading","setLoading","useEffect","getUsers","brokersWid","brokers","map","obj","index","_jsx","children","Card","_jsxs","CardBody","CardTitle","tag","CardSubtitle","className","Table","responsive","borderless","tdata","src","alt","width","height","Tables","Row","Col","lg","bordered","scope","striped","hover"],"sourceRoot":""}